
Todo & misc notes
=================

******************************************************************************

+ lwfm etc
    + examples
        - qtsuite wciscc test circuit(s) - in files w notation, qtsuite example 01, test 02
        - lwfManager.getLoggingByWorkflowId - qtsuite example 01, test 01
        - unpacking qiskit results - show in qtsuite cfd
        - notating get from IBM by doing a local put?
        - sending email notification?

    - IBM site driver
        - ibm site w qiskit run - allow 1 session for many circuits
        - noise model, from backend
        - capture of current machine state
        - gpu device
        - custom pass manager steps
        - see qiskit function quick-pde
        - sqd example

    - logging provenance, metasheets/jobs by xxx (#107)
    - TODO items (many are for log context - separate ticket)
    - inline docs esp. for .base & .midware (#84)
    - document keywords, pillars for metasheet search
    - document ibm driver
    - import/export (#73)
    - reverse args of put & get
    - submit & jobDefn take dict, list, or serialized string of either


+ qml 
    - Havlicek et al 2019
    - pennylane vs. ibm 


+ materials
    - read: DFT, DMFT, CALPHAD, JARVIS


+ AI IDEs
    - making the same mistakes
    - speed of responses - too fast sometimes
    - not following author style
    - making suggestions which don't pass linting
    - making suggestions which don't work
    - getting wrapped around the axle 


******************************************************************************

+ ornl site
    - PNLL simulator, tensor sim (see also https://github.com/tencent-quantum-lab/tensorcircuit)
    + heterogeneous scheduling    
        - strace for logging file access - output could be parsed perhaps...
        - Slurm plugins as Site, deployable in-situ - "slurm heterogeneous interop"
        - Pilot 


+ lwfm agent - general wf agent
    - "write the docs first"
    - how does the LLM track workflows, how can we mine the logging artifacts - do we trust them?
    - Google Codex use of Agents.md to understand the codebase / guardrails 
    - .base & .midware signatures for mcp wrapper - copiously document
    - mcp async abilities - how to use relative to lwfm triggers - w. example
    + qwf-agent - quantum wf agent built on lwfm agent
        - IBM 4-part quantum framework vs. more granular steps (see below)
        - e.g. swap out transpilation pipelines for target QCs
        - a2a scenario - Assistant & QA test agents? ("ai4sci", agent surfing arxiv, etc.)


+ wciscc2025
    - IBM, IQM, Quantinuum, IonQ machines w lwfm venv 
    - ibm_sherbrooke going end of life  


******************************************************************************
Design: (map to IBM 4-step process)

+ Author
    - describe circuit in language of choice (e.g. QASM, OpenQASM, etc.)
    - writes to descriptor format?

+ Pre 

+ Build (circuit_HHL.py)
    - construct circuit from description (likely Python Qiskit or matrix)
    - write to interchange format (Qpy)

+ Optimize

+ Transpile 

+ Run (solver.py)
    - reads in circuit in interchange format (Qpy)
    - transpiles / optimizes circuit (to ISA)  - is this two steps? what are ins/outs?
    - runs circuit 
    - returns results 
    + backend plugins
        - credentials (Auth)
        - libraries (Run)
        - execution (Run)
        - monitor execution (Run)
        - return results (Run)

+ Post 


******************************************************************************
installation notes for lwfm-agent

python
uv
node, npm, npx 
<my project> 
fast-agent, API key in fastagent.secrets.yaml, servers in fastagent.config.yaml 


******************************************************************************
other notes

- AFRL needs to juggle qc backends for their algorithm benchmarking w DARPA 
- lwfm roadmap - ORNL DD?
+ algorithms
    - zoo impls?
    - AFRL impls?
    - tutorials?


******************************************************************************
