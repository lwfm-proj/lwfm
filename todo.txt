
Todo & misc notes
=================

******************************************************************************

+ lwfm
    + top
        - remove hardcoded site.toml
        - job trigger workflow reference is wrong
        - capture runArgs, jobDefn in job status, show in workflow dump
        - metadata notate on get?
        - lwfManager / logger set context, logging provenance
        - cascading metadata sheet dump
        - test01: find by metadata, workflowId
        - email job status lifecycle & link to workflow
        - explicit workflow saving - lwfManager.saveWorkflow()
        - move test cases to qtsuite?
    + qtsuite
        - test04: sqd
        - qoblib - independent set
    - "data site" interface
    - import/export (#73)
    - submit & jobDefn take dict, list, or serialized string of either
    - metasheets/jobs by xxx (#107)
    - reverse args of put & get
    - logging provenance - workflow level, job level - how to divine the context?
    - todo items (many are for log context - separate ticket)
    - inline docs esp. for .base & .midware (#84), document keywords, pillars for metasheet search
    - slurm site driver / altair?
    - better error message when site name is bum on getSite()

+ IBM site driver
    - get without a file involved - just a string return
    - proper job status emits
    - VSCode linting
    - unpacking qiskit results - show in qtsuite cfd
    - ibm site w qiskit run options - which besides those below?
    - notating get from IBM by doing a local put?
    - allow 1 session for many circuits
    - noise model, from backend
    - capture of current machine state
    - gpu device
    - custom pass manager steps
    - document driver


******************************************************************************
Design: (map to IBM 4-step process)

+ Author
    - describe circuit in language of choice (e.g. QASM, OpenQASM, etc.)
    - writes to descriptor format?

+ Pre 

+ Build (circuit_HHL.py)
    - construct circuit from description (likely Python Qiskit or matrix)
    - write to interchange format (Qpy)

+ Optimize

+ Transpile 

+ Run (solver.py)
    - reads in circuit in interchange format (Qpy)
    - transpiles / optimizes circuit (to ISA)  - is this two steps? what are ins/outs?
    - runs circuit 
    - returns results 
    + backend plugins
        - credentials (Auth)
        - libraries (Run)
        - execution (Run)
        - monitor execution (Run)
        - return results (Run)

+ Post 


******************************************************************************
installation notes for lwfm-agent

python
uv
node, npm, npx 
<my project> 
fast-agent, API key in fastagent.secrets.yaml, servers in fastagent.config.yaml 


******************************************************************************
